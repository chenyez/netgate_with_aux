import torch
import torch.nn as nn

q=torch.FloatTensor([[ 4.4218,  1.4935, -7.5142, -4.5693,  0.4898, -0.6328],
        [-0.9323, -0.6551, -5.9545, -2.5643, -0.8612, -3.5345],
        [ 2.1248,  0.9758, -7.6306, -3.5886, -0.9447, -1.4360],
        [ 1.1243, -1.2495, -5.2357, -2.5884, -0.2377, -4.4372],
        [-0.8337, -0.6982, -6.0046, -2.4887, -0.9423, -3.4646],
        [-0.8863, -0.7033, -5.8615, -2.3843, -0.9866, -3.5606],
        [-0.9285, -0.7165, -5.9545, -2.5580, -0.8462, -3.5220],
        [ 0.5980,  0.0918, -5.5249, -3.2037,  0.0542, -4.5227],
        [ 4.5683,  1.8327, -8.2702, -7.0318, -1.5721, -2.3800],
        [-0.9387, -0.7799, -5.9075, -2.6114, -0.7680, -3.5332],
        [-0.9157, -0.6713, -5.9906, -2.5400, -0.8885, -3.5034],
        [-0.3750, -0.9124, -6.5025, -3.7455, -1.5273, -3.4919],
        [-0.9272, -0.6277, -5.9874, -2.6530, -0.8552, -3.5588],
        [-0.9021, -0.6371, -5.9408, -2.5804, -0.8919, -3.4967],
        [ 2.2565,  0.0298, -7.4102, -7.2339, -3.1464, -4.8193],
        [ 2.0013,  0.9386, -6.8235, -3.5613, -0.0037, -1.5127]])


for i in range(len(q)):
    qn = torch.norm(q[i], p=2).detach()
    q[i] = q[i].div(qn.expand_as(q[i]))

print("normalize q is:",q)
